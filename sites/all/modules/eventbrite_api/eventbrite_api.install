<?php

/**
 * Performs database schema, install and uninstall functions for the Eventbrite module.
 */
 
/**
 * Implements hook_requirements().
 */
function eventbrite_api_requirements($phase) {
  // The array that we will return.
  $requirements = array();
  // We only need the "runtime" phase.
  if ($phase == 'runtime') {
    // Installation version of t().
    $t = get_t();
    // Load the library.
    $library = libraries_detect('eventbrite');
    // If the library is not installed.
    if (empty($library['installed'])) {
      // Build the requirements array.
      $requirements['eventbrite'] = array(
        'title' => $t('Eventbrite'),
        'value' => $t('Not found'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('You need to download !eventbrite_php and place it into a directory named eventbrite in the %path directory on your server.', array('!eventbrite_php' => l($t('eventbrite.php'), $library['download url']), '%path' => 'sites/all/libraries')),
      );
    }
    // Let the user know that it's working.
    else {
      // Build the requirements array.
      $requirements['eventbrite'] = array(
        'title' => $t('Eventbrite'),
        'value' => $t('Found'),
        'severity' => REQUIREMENT_OK,
        'description' => $t('The eventbrite.php library is installed.'),
      );
    }
  }
  return $requirements;
}

/**
 * Implements hook_schema().
 */
function eventbrite_api_schema() {
  $schema['eventbrite_api_events'] = array(
    'description' => 'The base table for Eventbrite events.',
    'fields' => array(
      'eid' => array(
        'description' => 'The primary identifier for an event.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'oid' => array(
        'description' => 'The id of the event organiser.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'The id of the associated venue.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'locale' => array(
        'description' => 'The language for the event.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'timezone' => array(
        'description' => 'The event timezone.',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'category' => array(
        'description' => 'The category for the event.',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'capacity' => array(
        'description' => 'The id of the event organiser.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'num_attendee_rows' => array(
        'description' => 'The number of attendees that have registered for the event.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The event title.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'start_date' => array(
        'description' => 'The event start date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'The status of the event.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'The event description.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'end_date' => array(
        'description' => 'The event end date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'tags' => array(
        'description' => 'Event tags/keywords.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'timezone_offset' => array(
        'description' => 'The offset of the timezone for the event.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'password' => array(
        'description' => 'The password for a private event.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The date on which the event was created.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'url' => array(
        'description' => 'The Eventbrite URL for the event.',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'privacy' => array(
        'description' => 'Whether an event is public or private.',
        'type' => 'varchar',
        'length' => 7,
        'not null' => TRUE,
        'default' => '',
      ),
      'modified' => array(
        'description' => 'The date on which the event was last modified.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'repeats' => array(
        'description' => 'Whether an event is repeating or not, and if it is, the repetition format.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'event_modified' => array('modified'),
      'event_created' => array('created'),
    ),
    'foreign keys' => array(
      'oid' => array(
        'table' => 'eventbrite_api_organizers',
        'columns' => array('oid' => 'oid'),
      ),
    ),
    'primary key' => array('eid'),
  );
  $schema['eventbrite_api_organizers'] = array(
    'description' => 'The table for event organizers.',
    'fields' => array(
      'oid' => array(
        'description' => 'The primary identifier for an event organizer.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of the event organizer.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'The description of the event organizer.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'long_description' => array(
        'description' => 'The longdescription of the event organizer.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'url' => array(
        'description' => 'The Eventbrite URL for the event.',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'organizer_name' => array('name'),
    ),
    'primary key' => array('oid'),
  );
  $schema['eventbrite_api_tickets'] = array(
    'description' => 'The table for event tickets.',
    'fields' => array(
      'tid' => array(
        'description' => 'The primary identifier for an event ticket.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'eid' => array(
        'description' => 'The id of the associated event.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The ticket name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'Whether a ticket is fixed price or donation.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The ticket description.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'start_date' => array(
        'description' => 'The ticket sale start date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'end_date' => array(
        'description' => 'The ticket sale end date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'min' => array(
        'description' => 'The minimum ticket quantity per order.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'max' => array(
        'description' => 'The maximum ticket quantity per order.',
        'type' => 'int',
        'unsigned' => TRUE,
      ),
      'price' => array(
        'description' => 'The price of the ticket.',
        'type' => 'numeric', 
        'size' => 'normal', 
        'default' => 0, 
        'precision' => 10, 
        'scale' => 2,
        'not null' => FALSE,
      ),
      'quantity_sold' => array(
        'description' => 'The number of the ticket sold.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'visible' => array(
        'description' => 'Whether the ticket is visible on the event registration page.',
        'type' => 'varchar',
        'length' => 5,
        'not null' => TRUE,
        'default' => '',
      ),
      'currency' => array(
        'description' => 'The ticket currency.',
        'type' => 'varchar',
        'length' => 5,
        'not null' => TRUE,
        'default' => '',
      ),
      'quantity_available' => array(
        'description' => 'The number of the ticket left to purchase.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'display_price' => array(
        'description' => 'The display price of the ticket.',
        'type' => 'numeric', 
        'size' => 'normal', 
        'default' => 0, 
        'precision' => 10, 
        'scale' => 2,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'start_date' => array('start_date'),
      'end_date' => array('end_date'),
    ),
    'foreign keys' => array(
      'eid' => array(
        'table' => 'eventbrite',
        'columns' => array('eid' => 'eid'),
      ),
    ),
    'primary key' => array('tid'),
  );
  $schema['eventbrite_api_venues'] = array(
    'description' => 'The table for event venues.',
    'fields' => array(
      'vid' => array(
        'description' => 'The primary identifier for an event venue.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'city' => array(
        'description' => 'The venue city.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The venue name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'country' => array(
        'description' => 'The venue country.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'region' => array(
        'description' => 'The venue region.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'address' => array(
        'description' => 'The venue address line 1.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'address_2' => array(
        'description' => 'The venue address line 2.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'postal_code' => array(
        'description' => 'The venue postal code.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'country_code' => array(
        'description' => 'The venue country code.',
        'type' => 'varchar',
        'length' => 2,
        'not null' => TRUE,
        'default' => '',
      ),
      'longitude' => array(
        'description' => 'The venue longitude.',
        'type' => 'numeric',
        'size' => 'normal', 
        'default' => 0, 
        'precision' => 10, 
        'scale' => 6,
        'not null' => TRUE,
      ),
      'latitude' => array(
        'description' => 'The venue latitude.',
        'type' => 'numeric', 
        'size' => 'normal', 
        'default' => 0, 
        'precision' => 10, 
        'scale' => 6,
        'not null' => TRUE,
      ),
      'lat_long' => array(
        'description' => 'The venue latitude and longitude as a string.',
        'type' => 'varchar',
        'length' => 40,
        'not null' => TRUE,
      ),
    ),
    'foreign keys' => array(
      'eid' => array(
        'table' => 'eventbrite',
        'columns' => array('eid' => 'eid'),
      ),
    ),
    'primary key' => array('vid'),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function eventbrite_api_uninstall() {
  db_query("DELETE FROM {variable} WHERE name LIKE 'eventbrite_api_%'");
}
